import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.SwingConstants;
import javax.swing.JTextField;
import javax.swing.JSpinner;
import javax.swing.JList;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

import java.awt.Choice;
import javax.swing.SpinnerNumberModel;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

public class Signup_Appliances_Form extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Signup_Appliances_Form frame = new Signup_Appliances_Form();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public Signup_Appliances_Form() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 557, 522);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		String appliances[] = {"AC", "Ceiling Fan", "Computer/PC/Laptop", 
				"Microwave Oven", "Refrigerator", "Washing Machine", 
				"Television", "Water Heater", "Tubelight", "Light Bulb"};
		int aids[] = new int[10];
		int quants[] = new int[10];
		
		JLabel lbl_appliances_reg = new JLabel("APPLIANCES REGISTRATION");
		lbl_appliances_reg.setHorizontalAlignment(SwingConstants.CENTER);
		lbl_appliances_reg.setFont(new Font("Tahoma", Font.BOLD, 18));
		lbl_appliances_reg.setBounds(108, 10, 365, 36);
		contentPane.add(lbl_appliances_reg);
		
		JLabel lbl_quantity = new JLabel("No. of Appliances");
		lbl_quantity.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_quantity.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_quantity.setBounds(23, 61, 120, 22);
		contentPane.add(lbl_quantity);
		
		JSpinner spinner0 = new JSpinner();
		spinner0.setModel(new SpinnerNumberModel(new Integer(1), new Integer(1), null, new Integer(1)));
		spinner0.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner0.setBounds(182, 57, 47, 26);
		contentPane.add(spinner0);
		
		JLabel lbl_appl1 = new JLabel("Appliance 1");
		lbl_appl1.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl1.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl1.setBounds(61, 93, 82, 22);
		contentPane.add(lbl_appl1);
		
		Choice choice1 = new Choice();
		choice1.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[0] = choice1.getSelectedIndex() + 1;
			}
		});
		choice1.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice1.setBounds(182, 93, 252, 18);
		for (int i = 0; i < 10; i++)
			choice1.add(appliances[i]);
		contentPane.add(choice1);
		
		JSpinner spinner1 = new JSpinner();
		spinner1.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[0] = (int) spinner1.getValue();
				int t = (int) spinner1.getModel().getValue();
				System.out.println(t);
			}
		});
		spinner1.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner1.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner1.setBounds(423, 92, 47, 26);
		contentPane.add(spinner1);
		
		JLabel lbl_appl2 = new JLabel("Appliance 2");
		lbl_appl2.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl2.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl2.setBounds(61, 126, 82, 22);
		contentPane.add(lbl_appl2);
		
		Choice choice2 = new Choice();
		choice2.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[1] = choice2.getSelectedIndex() + 1;
			}
		});
		choice2.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice2.setBounds(182, 126, 252, 18);
		for (int i = 0; i < 10; i++)
			choice2.add(appliances[i]);
		contentPane.add(choice2);
		
		JSpinner spinner2 = new JSpinner();
		spinner2.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[1] = (int) spinner2.getValue(); 
			}
		});
		spinner2.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner2.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner2.setBounds(423, 125, 47, 26);
		contentPane.add(spinner2);
		
		JLabel lbl_appl3 = new JLabel("Appliance 3");
		lbl_appl3.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl3.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl3.setBounds(61, 159, 82, 22);
		contentPane.add(lbl_appl3);
		
		Choice choice3 = new Choice();
		choice3.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[2] = choice3.getSelectedIndex() + 1;
			}
		});
		choice3.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice3.setBounds(182, 159, 252, 18);
		for (int i = 0; i < 10; i++)
			choice3.add(appliances[i]);
		contentPane.add(choice3);
		
		JSpinner spinner3 = new JSpinner();
		spinner3.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[2] = (int) spinner3.getValue(); 
			}
		});
		spinner3.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner3.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner3.setBounds(423, 158, 47, 26);
		contentPane.add(spinner3);
		
		JLabel lbl_appl4 = new JLabel("Appliance 4");
		lbl_appl4.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl4.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl4.setBounds(61, 192, 82, 22);
		contentPane.add(lbl_appl4);
		
		Choice choice4 = new Choice();
		choice4.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[3] = choice4.getSelectedIndex() + 1;
			}
		});
		choice4.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice4.setBounds(182, 192, 252, 18);
		for (int i = 0; i < 10; i++)
			choice4.add(appliances[i]);
		contentPane.add(choice4);
		
		JSpinner spinner4 = new JSpinner();
		spinner4.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[3] = (int) spinner4.getValue(); 
			}
		});
		spinner4.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner4.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner4.setBounds(423, 191, 47, 26);
		contentPane.add(spinner4);
		
		JLabel lbl_appl5 = new JLabel("Appliance 5");
		lbl_appl5.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl5.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl5.setBounds(61, 225, 82, 22);
		contentPane.add(lbl_appl5);
		
		Choice choice5 = new Choice();
		choice5.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[4] = choice5.getSelectedIndex() + 1;
			}
		});
		choice5.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice5.setBounds(182, 225, 252, 18);
		for (int i = 0; i < 10; i++)
			choice5.add(appliances[i]);
		contentPane.add(choice5);
		
		JSpinner spinner5 = new JSpinner();
		spinner5.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[4] = (int) spinner5.getValue(); 
			}
		});
		spinner5.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner5.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner5.setBounds(423, 224, 47, 26);
		contentPane.add(spinner5);
		
		JSpinner spinner6 = new JSpinner();
		spinner6.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[5] = (int) spinner6.getValue(); 
			}
		});
		spinner6.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner6.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner6.setBounds(423, 257, 47, 26);
		contentPane.add(spinner6);
		
		Choice choice6 = new Choice();
		choice6.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[5] = choice6.getSelectedIndex() + 1;
			}
		});
		choice6.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice6.setBounds(182, 258, 252, 18);
		for (int i = 0; i < 10; i++)
			choice6.add(appliances[i]);
		contentPane.add(choice6);
		
		JLabel lbl_appl6 = new JLabel("Appliance 6");
		lbl_appl6.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl6.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl6.setBounds(61, 258, 82, 22);
		contentPane.add(lbl_appl6);
		
		JLabel lbl_appl7 = new JLabel("Appliance 7");
		lbl_appl7.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl7.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl7.setBounds(61, 291, 82, 22);
		contentPane.add(lbl_appl7);
		
		Choice choice7 = new Choice();
		choice7.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[6] = choice7.getSelectedIndex() + 1;
			}
		});
		choice7.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice7.setBounds(182, 291, 252, 18);
		for (int i = 0; i < 10; i++)
			choice7.add(appliances[i]);
		contentPane.add(choice7);
		
		JSpinner spinner7 = new JSpinner();
		spinner7.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[6] = (int) spinner7.getValue(); 
			}
		});
		spinner7.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner7.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner7.setBounds(423, 290, 47, 26);
		contentPane.add(spinner7);
		
		JSpinner spinner8 = new JSpinner();
		spinner8.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[7] = (int) spinner8.getValue(); 
			}
		});
		spinner8.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner8.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner8.setBounds(423, 323, 47, 26);
		contentPane.add(spinner8);
		
		Choice choice8 = new Choice();
		choice8.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[7] = choice8.getSelectedIndex() + 1;
			}
		});
		choice8.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice8.setBounds(182, 324, 252, 18);
		for (int i = 0; i < 10; i++)
			choice8.add(appliances[i]);
		contentPane.add(choice8);
		
		JLabel lbl_appl8 = new JLabel("Appliance 8");
		lbl_appl8.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl8.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl8.setBounds(61, 324, 82, 22);
		contentPane.add(lbl_appl8);
		
		JLabel lbl_appl9 = new JLabel("Appliance 9");
		lbl_appl9.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl9.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl9.setBounds(64, 360, 82, 22);
		contentPane.add(lbl_appl9);
		
		Choice choice9 = new Choice();
		choice9.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[8] = choice9.getSelectedIndex() + 1;
			}
		});
		choice9.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice9.setBounds(185, 360, 252, 18);
		for (int i = 0; i < 10; i++)
			choice9.add(appliances[i]);
		contentPane.add(choice9);
		
		JSpinner spinner9 = new JSpinner();
		spinner9.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[8] = (int) spinner9.getValue(); 
			}
		});
		spinner9.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner9.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner9.setBounds(426, 359, 47, 26);
		contentPane.add(spinner9);
		
		JLabel lbl_appl10 = new JLabel("Appliance 10");
		lbl_appl10.setHorizontalAlignment(SwingConstants.RIGHT);
		lbl_appl10.setFont(new Font("Tahoma", Font.PLAIN, 14));
		lbl_appl10.setBounds(64, 393, 82, 22);
		contentPane.add(lbl_appl10);
		
		Choice choice10 = new Choice();
		choice10.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				aids[9] = choice10.getSelectedIndex() + 1;
			}
		});
		choice10.setFont(new Font("Tahoma", Font.PLAIN, 14));
		choice10.setBounds(185, 393, 252, 18);
		for (int i = 0; i < 10; i++)
			choice10.add(appliances[i]);
		contentPane.add(choice10);
		
		JSpinner spinner10 = new JSpinner();
		spinner10.addFocusListener(new FocusAdapter() {
			@Override
			public void focusLost(FocusEvent e) {
				quants[9] = (int) spinner10.getValue(); 
			}
		});
		spinner10.setModel(new SpinnerNumberModel(new Integer(0), new Integer(0), null, new Integer(1)));
		spinner10.setFont(new Font("Tahoma", Font.PLAIN, 14));
		spinner10.setBounds(426, 392, 47, 26);
		contentPane.add(spinner10);
		
		JButton btn_reg = new JButton("Register");
		btn_reg.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				int ap_quantity = (int) spinner0.getValue();
				String uname = Signup_User_Form.getUsername();
				
				for (int i = 0; i < ap_quantity; i++) {
					int aid = aids[i];
					int quant = quants[i];
					PreparedStatement st;
					int rs;
					String query = "INSERT INTO solarspace.appliance_user VALUES "
							+ "(?, ?, ?)";
					try {
						st = DB_Connection.getConnection().prepareStatement(query);
						st.setString(1, uname);
						st.setInt(2, aid);
						st.setInt(3, quant);
						
						rs = st.executeUpdate();
					} catch (SQLException err) {
						System.err.println(err);
					}
				}
				
				JOptionPane.showMessageDialog(null, "Your Account Has Been Created");
				Login_Form login = new Login_Form();
				login.setVisible(true);
				login.setLocationRelativeTo(null);
				
				//close current page
				dispose();
			}
		});
		btn_reg.setFont(new Font("Tahoma", Font.PLAIN, 14));
		btn_reg.setBounds(182, 428, 132, 42);
		contentPane.add(btn_reg);
		
		
	}
}
